-----------------------------------
-- actor_menu_mode 				 --
-- Modified by Surs for A.R.E.A. --
-----------------------------------
-- int mode:
-- 0 = 	Undefined = закрыто
-- 1 = 	Inventory
-- 2 = 	Trade
-- 3 = 	Upgrade
-- 4 = 	DeadBodySearch
-- 10 = Talk dialog show
-- 11 = Talk dialog hide
local last_mode = 0
local active_cam_flag = false
function actor_menu_mode(mode)
	SendScriptCallback("actor_menu_mode_changed",mode,last_mode)

	if (mode==0) then
		if (last_mode==1) then
			inventory_wnd_closed()
		elseif (last_mode==2) then
			trade_wnd_closed()
		elseif (last_mode==3) then
			upgrade_wnd_closed()
		elseif (last_mode==4) then
			dead_body_search_wnd_closed()
		end
		last_mode = 0
	elseif (mode==1) then
		last_mode = 1
		inventory_wnd_opened()
	elseif (mode==2) then
		last_mode = 2
		trade_wnd_opened()
	elseif (mode==3) then
		last_mode = 3
		upgrade_wnd_opened()
	elseif (mode==4) then
		last_mode = 4
		dead_body_search_wnd_opened()
	elseif (mode==10) then
		dialog_wnd_showed()
	elseif (mode==11) then
		dialog_wnd_closed()
	end

	if mode ~= 0 and mode <= 10 then
		if axr_main.config:r_value("mm_options","enable_switch_camera",1,false) then 
			change_camera()
		end
		if not TableAnimHands().status then actor_hide_wpn(true) end
	else
		if 12 == mode then
			if not TableAnimHands().status then actor_hide_wpn(true) end
		else
			actor_hide_wpn(false)
		end
		reset_camera()
		DefaultDOF()
	end
end

active_slot = 0
function inventory_wnd_opened()
	active_slot = db.actor:active_slot()
	SendScriptCallback("InvWndOpened")
	AddDOF({
		kernel = 10,
		far = 1.5,
		sky = 10000
	})
	ActorMenu.get_actor_menu():HealthProgressUI(axr_main.config:r_value("mm_options","enable_health_progressbar",1,true))
	--actor_effects.use_item("inventory_open")
	-- printf("---:>Inventory opened")
end

function inventory_wnd_closed()
	SendScriptCallback("InvWndClosed")
	--actor_effects.use_item("inventory_close")
	CreateTimeEvent("inventory_wnd_closed",0,0.2,function()
		active_slot = 0
		return true
	end)
end

function trade_wnd_opened()
	SendScriptCallback("TrdWndOpened")
	actor_effects.use_item("inventory_trade_open")
	AddDOF({
		kernel = 6,
		far = 1.5,
		sky = 10000
	})
	--printf("---:>Trade opened")
end

function trade_wnd_closed()
	--printf("---:>Trade closed")
	SendScriptCallback("TrdWndClosed")
	xr_meet_trade_closed = true
	actor_effects.use_item("inventory_close")
end

function upgrade_wnd_opened()
	actor_effects.use_item("inventory_close2")
	--printf("---:>Upgrade opened")
end

function upgrade_wnd_closed()
	--printf("---:>Upgrade closed")
end

function dead_body_search_wnd_opened()
	--printf("---:>DeadBodySearch opened")
	AddDOF({
		kernel = 6,
		far = 1.5,
		sky = 10000
	})
	--actor_effects.use_item("inventory_open")
end

function dead_body_search_wnd_closed()
	--printf("---:>DeadBodySearch closed")
	--actor_effects.use_item("inventory_close")
end

function dialog_wnd_showed()
	AddDOF({
		kernel = 6,
		far = 1.5,
		sky = 10000
	})
	--printf("---:>Talk Dialog show")
	-- use pda.script for dialog_wnd
end

function dialog_wnd_closed()
	--printf("---:>Talk Dialog hide")
	-- use pda.script for dialog_wnd
	-- actor_hide_wpn(false)
end

local active_cam = 0
function change_camera()
	if not active_cam_flag then
		active_cam = level.get_active_cam()
		level.set_active_cam(1)
		active_cam_flag = true
	end
end
function reset_camera()
	if active_cam_flag then
		level.set_active_cam(active_cam)
		active_cam_flag = false
	end
end

-- Called from engine! return CUIWindow or nil
local function up_inventory_hint_init_item(itm1, itm2, UI)
	UI.Y = 0
	SendScriptCallback("inventory_hint_ui_item", itm1, itm2, UI)
end

function inventory_hint_init_item(itm1,itm2)
	-- if (itm1:cast_EatableItem()) then
	local UI = ui_actor_hint_wnd_ext.get_ui(itm1, itm2)
	LimitUpdate(up_inventory_hint_init_item, 0.3, itm1, itm2, UI)
	if UI.Y == 0 then
		UI:SetWndSize(vector2():set(290, UI.Y))
	end
	return UI
	-- end
end