local wait = true
local use_cooking = false

function on_game_start()
	RegisterScriptCallback("actor_on_item_use",item_use)
	CreateTimeEvent(0,"save_camp_timer",30,save_camp)
end

function item_use(obj)
	if (obj:section() == "matches") or (obj:section() == "lighter") then
		CreateTimeEvent(0,"item_used",2,campfire_on)
		return true
	end
end

-- Chance
function is_raining()
	if level.get_roof(db.actor:position()) then
		local chance = 1
		return chance
	end
	local rain = level.rain_factor()
	if (rain ~= nil) and (rain > 0 and rain < 0.5) then
		local chance = math.random(1,3)
		return chance
	elseif (rain >= 0.5) then
		local chance = math.random(1,4)	-- Chance of turning on 1\4
		return chance
	else
		local chance = 1
		return chance
	end
end

function save_camp()
	wait = nil
	return true
end

function iSnearCamp(dist)
	for id,binder in pairs(bind_campfire.campfires_all) do
		if (db.actor:position():distance_to_sqr(binder.object:position()) <= dist^2) then
			return binder.object
		end
	end
end

function iSnearCustom(dist)
	for id, se_obj in alife():objects() do
		if se_obj:section_name() == "ph_campfire" and se_obj.position:distance_to_sqr(db.actor:position()) < dist^3 then
			--news_manager.send_tip(db.actor, "Near Campfire", nil, nil, nil, 1000)
			return level.object_by_id(id)
		end
	end
end

function campfire_on()
	local obj = iSnearCamp(1.75) or iSnearCustom(1.75)
	local cf = obj and obj:get_campfire()
	if cf then
		-- attempt to light fire
		if not (cf:is_on()) then
			if (is_raining() == 1) then
				cf:turn_on()
				if bind_picnic then bind_picnic.safe_zone() end
			else
				return true
			end
		end
		-- save on match use
		if not (wait) then 
			local flist = getFS():file_list_open_ex("$game_saves$",	bit_or(FS.FS_ListFiles,FS.FS_RootOnly),"*".. ui_load_dialog.saved_game_extension)
			local f_cnt = flist and flist:Size() or 0
		
			local inc = 0
			if (f_cnt > 0) then
				flist:Sort(FS.FS_sort_by_modif_down)
				for it=0, f_cnt-1 do
					local file_name = flist:GetAt(it):NameFull():sub(0,-6):lower()
		
					-- grab last modified quicksave increment count
					local d = tonumber( file_name:match("campfire_autosave(%d+)") )
					if (d) then
						inc = d
						break 
					end
				end
			end
			inc = inc >= axr_main.config:r_value("mm_options","quicksave_cnt",2,10) and 1 or inc + 1
			get_console():execute("save campfire_autosave"..inc)
			wait = true
			CreateTimeEvent(0,"save_camp_timer",30,save_camp)
		end
	end
	return true
end